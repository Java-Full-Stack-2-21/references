server.port=9000

#same information that we needed for JDBC will go here
#spring.datasource.url=jdbc:postgresql://${AWS_RDS_ENDPOINT}/hellohibernate
#spring.datasource.username=${RDS_USERNAME}
#spring.datasource.password=${RDS_PASSWORD}
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect


spring.datasource.url=jdbc:h2:./h2/db
spring.datasource.username=sa
spring.datasource.password=sa
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


#add this property to view tables in browser
spring.h2.console.enabled=true


# DDL auto is how we will deal with
# what happens to our schema when the app runs

# create
#   - drops all existing tables and recreate them

# validate
#   - checks to make sure the schema exists as expected before making operations

# update
#   - will NOT delete anything. itll only add/modify existing schemas

# create-drop
#   - hibernate will create your schema then delete it when the app ends

#Ill explain later
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true